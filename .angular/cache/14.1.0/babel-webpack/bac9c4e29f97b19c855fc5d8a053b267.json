{"ast":null,"code":"import _asyncToGenerator from \"/Users/soethandara/Documents/develop/automatic-docker-image/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BehaviorSubject, lastValueFrom } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AppConfigService {\n  constructor(_http) {\n    this._http = _http;\n    this.appConfig = window.appConfig;\n    this.bevAppConfig = new BehaviorSubject(null);\n  }\n  /**\n   * Load application config\n   */\n\n\n  loadAppConfig() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const configUrl = `assets/config/app-config.json`;\n      const data = yield lastValueFrom(_this._http.get(configUrl));\n      _this.appConfig = Object.assign(data, _this.appConfig);\n\n      _this.bevAppConfig.next(_this.appConfig);\n    })();\n  }\n  /**\n   * Get config\n   * @returns bevAppConfig\n   */\n\n\n  getConfig() {\n    return this.bevAppConfig;\n  }\n\n}\n\nAppConfigService.ɵfac = function AppConfigService_Factory(t) {\n  return new (t || AppConfigService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nAppConfigService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AppConfigService,\n  factory: AppConfigService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAEA,SAASA,eAAT,EAA0BC,aAA1B,QAA+C,MAA/C;;;AAOA,OAAM,MAAOC,gBAAP,CAAuB;EAK3BC,YACUC,KADV,EAC2B;IAAjB;IAJH,iBAAYC,MAAM,CAACC,SAAnB;IACA,oBAAe,IAAIN,eAAJ,CAAyB,IAAzB,CAAf;EAIF;EAEL;;;;;EAGMO,aAAa;IAAA;;IAAA;MACjB,MAAMC,SAAS,GAAG,+BAAlB;MACA,MAAMC,IAAI,SAASR,aAAa,CAAC,KAAI,CAACG,KAAL,CAAWM,GAAX,CAAeF,SAAf,CAAD,CAAhC;MACA,KAAI,CAACF,SAAL,GAAiBK,MAAM,CAACC,MAAP,CAAcH,IAAd,EAAoB,KAAI,CAACH,SAAzB,CAAjB;;MACA,KAAI,CAACO,YAAL,CAAkBC,IAAlB,CAAuB,KAAI,CAACR,SAA5B;IAJiB;EAKlB;EAED;;;;;;EAIAS,SAAS;IACP,OAAO,KAAKF,YAAZ;EACD;;AAzB0B;;;mBAAhBX,kBAAgBc;AAAA;;;SAAhBd;EAAgBe,SAAhBf,gBAAgB;EAAAgB,YAFf","names":["BehaviorSubject","lastValueFrom","AppConfigService","constructor","_http","window","appConfig","loadAppConfig","configUrl","data","get","Object","assign","bevAppConfig","next","getConfig","i0","factory","providedIn"],"sourceRoot":"","sources":["/Users/soethandara/Documents/develop/automatic-docker-image/src/app/shared/service/config-service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, lastValueFrom } from \"rxjs\";\n\ndeclare var window: any; // To call index.html via window\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppConfigService {\n\n  public appConfig = window.appConfig;\n  public bevAppConfig = new BehaviorSubject<any>(null);\n\n  constructor(\n    private _http: HttpClient,\n  ) { }\n\n  /**\n   * Load application config\n   */\n  async loadAppConfig() {\n    const configUrl = `assets/config/app-config.json`;\n    const data = await lastValueFrom(this._http.get(configUrl));\n    this.appConfig = Object.assign(data, this.appConfig);\n    this.bevAppConfig.next(this.appConfig);\n  }\n\n  /**\n   * Get config \n   * @returns bevAppConfig \n   */\n  getConfig() {\n    return this.bevAppConfig;\n  }\n\n}"]},"metadata":{},"sourceType":"module"}