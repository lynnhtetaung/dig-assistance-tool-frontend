{"ast":null,"code":"import _asyncToGenerator from \"/home/pc7/Documents/develop/automatic-docker-image/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BehaviorSubject, lastValueFrom } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DockerInstructionsConfigService {\n  constructor(_http) {\n    this._http = _http;\n    this.appConfig = window.appConfig;\n    this.bevDockerInstructionsConfig = new BehaviorSubject(null);\n  }\n  /**\n   * Load application config\n   */\n\n\n  loadDockerInstructionsConfig() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const configUrl = `assets/config/docker-instruction.json`;\n      const data = yield lastValueFrom(_this._http.get(configUrl));\n      _this.appConfig = Object.assign(data, _this.appConfig);\n\n      _this.bevDockerInstructionsConfig.next(_this.appConfig);\n    })();\n  }\n  /**\n   * Get config\n   * @returns bevDockerInstructionsConfig\n   */\n\n\n  getDockerInstructionsConfig() {\n    return this.bevDockerInstructionsConfig;\n  }\n\n}\n\nDockerInstructionsConfigService.ɵfac = function DockerInstructionsConfigService_Factory(t) {\n  return new (t || DockerInstructionsConfigService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nDockerInstructionsConfigService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DockerInstructionsConfigService,\n  factory: DockerInstructionsConfigService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAEA,SAASA,eAAT,EAA0BC,aAA1B,QAA+C,MAA/C;;;AAOA,OAAM,MAAOC,+BAAP,CAAsC;EAK1CC,YACUC,KADV,EAC2B;IAAjB;IAJH,iBAAYC,MAAM,CAACC,SAAnB;IACA,mCAA8B,IAAIN,eAAJ,CAAyB,IAAzB,CAA9B;EAIF;EAEL;;;;;EAGMO,4BAA4B;IAAA;;IAAA;MAChC,MAAMC,SAAS,GAAG,uCAAlB;MACA,MAAMC,IAAI,SAASR,aAAa,CAAC,KAAI,CAACG,KAAL,CAAWM,GAAX,CAAeF,SAAf,CAAD,CAAhC;MACA,KAAI,CAACF,SAAL,GAAiBK,MAAM,CAACC,MAAP,CAAcH,IAAd,EAAoB,KAAI,CAACH,SAAzB,CAAjB;;MACA,KAAI,CAACO,2BAAL,CAAiCC,IAAjC,CAAsC,KAAI,CAACR,SAA3C;IAJgC;EAKjC;EAED;;;;;;EAIAS,2BAA2B;IACzB,OAAO,KAAKF,2BAAZ;EACD;;AAzByC;;;mBAA/BX,iCAA+Bc;AAAA;;;SAA/Bd;EAA+Be,SAA/Bf,+BAA+B;EAAAgB,YAF9B","names":["BehaviorSubject","lastValueFrom","DockerInstructionsConfigService","constructor","_http","window","appConfig","loadDockerInstructionsConfig","configUrl","data","get","Object","assign","bevDockerInstructionsConfig","next","getDockerInstructionsConfig","i0","factory","providedIn"],"sourceRoot":"","sources":["/home/pc7/Documents/develop/automatic-docker-image/src/app/shared/service/docker-instructions-config-service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, lastValueFrom } from \"rxjs\";\n\ndeclare var window: any; // To call index.html via window\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DockerInstructionsConfigService {\n\n  public appConfig = window.appConfig;\n  public bevDockerInstructionsConfig = new BehaviorSubject<any>(null);\n\n  constructor(\n    private _http: HttpClient,\n  ) { }\n\n  /**\n   * Load application config\n   */\n  async loadDockerInstructionsConfig() {\n    const configUrl = `assets/config/docker-instruction.json`;\n    const data = await lastValueFrom(this._http.get(configUrl));\n    this.appConfig = Object.assign(data, this.appConfig);\n    this.bevDockerInstructionsConfig.next(this.appConfig);\n  }\n\n  /**\n   * Get config \n   * @returns bevDockerInstructionsConfig \n   */\n  getDockerInstructionsConfig() {\n    return this.bevDockerInstructionsConfig;\n  }\n\n}"]},"metadata":{},"sourceType":"module"}